void Insert(Linear_list &L, int i, ElemType x, int &n) 
/*在长度为n的线性表的第i个元素之前插入一个元素x,L为存储线性表的向量，且假定其
上界大于n*/
{
    if((i < 1) || (i > n + 1))
        error("插入的位置非法");
    else 
    {
        for (j = n - 1; j >= i - 1; j--)
            L[j + 1] = L[j];//一些元素后移
        L[i - 1] = x;
        //新元素插入，第i个元素的下标为i - 1
        n = n + 1;  //修改长度
    }
}

void Delete(Linear_list &L, int i, int &n)
//删除线性表中的第i个元素
{
    if ((i < 1) || (i > n))
        error("非法删除");
    else 
    {
        for (j = i; j <= n - 1; j++)
            L[j - 1] = L[j]; //将后面的元素依次前移
        n = n - 1;
    }
}

int Locete(Linear_list &L, ElemType x, int &n)
/*在线性表中依次（从前往后）比较各结点的值是否等于x，若相等则回传
该元素在线性表中的符号，否则回传0*/
{
    i = 0;
    while ((i < n) && (L[i] != x))
        i = i + 1;
    if (i < n)
        return (i + 1);//若找到值为x的元素，则返回其符号
    else
        return 0;
}